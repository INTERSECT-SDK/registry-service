import datetime

from sqlmodel import TIMESTAMP, Column, Field, Relationship, SQLModel, text

from .service import Service


class Broker(SQLModel, table=True):
    """A Broker configuration representative of a Service.

    Services have a one-to-many relationship with Brokers. When a Service is deleted, its Broker configuration needs to be deleted as well.

    Broker configurations should only be generated by the registry service, do not allow users to modify any values here.
    """

    id: int | None = Field(default=None, primary_key=True)
    service_id: int | None = Field(default=None, foreign_key='service.id', ondelete='CASCADE')
    service: Service | None = Relationship(back_populates='brokers')

    broker_password: str = Field(nullable=False)
    """Most brokers only store password hashes. To allow for horizontally scaling SDK clients (given that each service gets its own user), we must store unhashed passwords.

    This value may also be regularly rotated by the registry service; users should not have the expectation that these passwords will remain consistent forever.
    """
    last_modified: datetime.datetime | None = Field(
        sa_column=Column(
            TIMESTAMP(timezone=True),
            nullable=False,
            server_default=text('CURRENT_TIMESTAMP'),
            server_onupdate=text('CURRENT_TIMESTAMP'),
        )
    )
